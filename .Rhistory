# total de vendas
sum(d$venda)
# total de vendas
sum(d$venda)
d$mes
?apply
unique(d$mes)
unique(d$mes) |> sort
for (i in unique(d$mes)) {
}
#
mes <- sort(unique(d$mes))
mes
mes <- sort(unique(d$mes))
for (i in mes) {
d[d$mes == i,]
}
print(d[d$mes == i,"vendas"])
mes <- sort(unique(d$mes))
for (i in mes) {
print(d[d$mes == i,"vendas"])
}
mes <- sort(unique(d$mes))
for (i in mes) {
print(d[d$mes == i,"venda"])
}
mes <- sort(unique(d$mes))
for (i in mes) {
print(sum(d[d$mes == i,"venda"]))
}
mes <- sort(unique(d$mes))
aux <- numeric()
for (i in mes) {
c(aux, (sum(d[d$mes == i,"venda"])))
}
mes
aux
mes <- sort(unique(d$mes))
aux <- numeric()
for (i in mes) {
c(aux, sum(d[d$mes == i,"venda"]))
}
aux
mes <- sort(unique(d$mes))
aux <- numeric()
for (i in mes) {
aux <- c(aux, sum(d[d$mes == i,"venda"]))
}
aux
data.frame(mes, venda = aux)
# maior vendedor mes
vendedores <- sort(unique(d$vendedores))
vendedores
# maior vendedor mes
vendedores <- sort(unique(d$vendedores))
aux <- numeric()
for(i in vendedores){
aux <- c(aux, sum(d[d$vendedores == i, "venda"]))
}
aux
data.frame(vendedores, venda = aux)
d1 <- data.frame(vendedores, venda = aux)
d1
sort(d1$venda)
d1[sort(d1$venda),}
d1[sort(d1$venda),]
d1[order(d1$venda),]
d1[order(d1$venda, decreasing = T),]
library(xlsx)
d <- read.xlsx2(file.choose())
d <- read.xlsx2("~/Downloads/docentes.xlsx")
d <- read.xlsx("~/Downloads/docentes.xlsx")
?read.xlsx
d <- read.xlsx2("~/Downloads/docentes.xlsx",1)
head(d)
d <- read.xlsx2("~/Downloads/docentes.xlsx",1, header = F)
d <- read.xlsx2("~/Downloads/docentes.xlsx",1)
head(d)
aux <- paste0(d$NOME, d$E.MAIL)
head(aux)
aux <- paste(d$NOME, d$E.MAIL, sep="/")
head(aux)
set.seed(99)
m <- data.frame(vendedores=letters, trim1=sample(seq(1,1000,0.5),26, T),
trim2=sample(seq(1, 1000,0.5),26, T), trim3=sample(seq(1, 1000,0.5),26, T),
trim4= sample(seq(1, 1000,0.5),26, T))
m
m[1,]
m[1,-1]
sort(m[1,-1])
sort(m[1,-1])[-1]
apply(m[,-1], 1, fn(x){ mean(sort(x)[-1]) })
apply(m[,-1], 1, function(x){ mean(sort(x)[-1]) })
m$media <- apply(m[,-1], 1, function(x){ mean(sort(x)[-1]) })
m
m$media <- apply(m[,c("trim1", "trim2", "trim3", "trim4")], 1, function(x){ mean(sort(x)[-1]) })
m
m$sd <- apply(m[,c("trim1", "trim2", "trim3", "trim4")], 1, function(x){ sd(sort(x)[-1]) })
m
m$media <- apply(m[,c("trim1", "trim2", "trim3", "trim4")], 1, function(x){ mean(sort(x, decreasing = T)[-1]) })
m$sd <- apply(m[,c("trim1", "trim2", "trim3", "trim4")], 1, function(x){ sd(sort(x, decreasing = T)[-1]) })
m
max(m$media)
ind.vend <- which.max(m$media)
ind.vend
m[ind.vend, ]
which.max(m[,c("trim1","trim2", "trim3", "trim4")])
max(m[,c("trim1","trim2", "trim3", "trim4")])
which(m == max_venda, arr.ind = TRUE)
# 2 - vendedor com maior venda
max_venda <- m[,c("trim1", "trim2", "trim3", "trim4")]
which(m == max_venda, arr.ind = TRUE)
which(m[,c("trim1", "trim2", "trim3", "trim4")] == max_venda, arr.ind = TRUE)
# 2 - vendedor com maior venda
max_venda <- max(m[,c("trim1", "trim2", "trim3", "trim4")])
which(m[,c("trim1", "trim2", "trim3", "trim4")] == max_venda, arr.ind = TRUE)
min_venda <- min(m[,c("trim1", "trim2", "trim3", "trim4")])
which(m[,c("trim1", "trim2", "trim3", "trim4")] == min_venda, arr.ind = TRUE)
# 3 - somar as vendas do trim, sem contar media e sd
apply(m[,c("trim1", "trim2", "trim3", "trim4")], 2, sum)
# somar as vendas de cada vendedor
apply(m[,c("trim1", "trim2", "trim3", "trim4")], 1, sum)
rm(list = ls())
setwd("~/Dropbox/ohashi/projects/covid19")
# Acumulado da serie
load("data/dados.RData")
ids <- unique(d$idRota)
ids
# percorrer os ids das rotas
aux.id <- numeric()
aux.acu <- numeric()
aux.dia <- as.Date(as.character())
aux.diaSemana <- as.character()
for(i in ids){
aux <- d[d$idRota == i,] # só do id
datas <- unique(aux$dataAsDate)
for(x in datas){
aux.id <- c(aux.id, i)
aux.acu <- c(aux.acu, aux[aux$dataAsDate == x,"diffTempo"] %>% sum())
aux.dia <- c(aux.dia, x %>% as.character())
aux.diaSemana <- c(aux.diaSemana, unique(aux[aux$dataAsDate==x,"diaSemana"]) %>% as.character())
}
}
library(dplyr)
library(ggplot2)
for(i in ids){
aux <- d[d$idRota == i,] # só do id
datas <- unique(aux$dataAsDate)
for(x in datas){
aux.id <- c(aux.id, i)
aux.acu <- c(aux.acu, aux[aux$dataAsDate == x,"diffTempo"] %>% sum())
aux.dia <- c(aux.dia, x %>% as.character())
aux.diaSemana <- c(aux.diaSemana, unique(aux[aux$dataAsDate==x,"diaSemana"]) %>% as.character())
}
}
acu <- data.frame(idRota=aux.id, acumulado=aux.acu, tempo=aux.dia, diaSemana=aux.diaSemana)
# percorrer os ids das rotas
aux.id <- numeric()
aux.acu <- numeric()
aux.dia <- as.Date(as.character())
aux.diaSemana <- as.character()
for(i in ids){
aux <- d[d$idRota == i,] # só do id
datas <- unique(aux$dataAsDate)
for(x in datas){
aux.id <- c(aux.id, i)
aux.acu <- c(aux.acu, aux[aux$dataAsDate == x,"diffTempo"] %>% sum())
aux.dia <- c(aux.dia, x %>% as.character())
aux.diaSemana <- c(aux.diaSemana, unique(aux[aux$dataAsDate==x,"diaSemana"]) %>% as.character())
}
}
acu <- data.frame(idRota=aux.id, acumulado=aux.acu, tempo=aux.dia, diaSemana=aux.diaSemana)
head(axu)
head(acu)
# identificar os top10
acumulado.geral <- numeric()
acumulado.id <- unique(acu$idRota)
for(i in acumulado.id){
acumulado.geral <- c(acumulado.geral, acu[acu$idRota == i,"acumulado"] %>% sum)
}
acu.geral <- data.frame(idRota=acumulado.id, acumulado.geral)
top10 <- acu.geral[order(acu.geral$acumulado.geral, decreasing = TRUE)[1:10],]
acu.top10 <- acu[acu$idRota %in% top10$idRota,]
acu.top10$tempo <- as.numeric(acu.top10$tempo)
levels(acu.top10$diaSemana) <- c("Dom", "Qua", "Qui", "Sab", "Seg", "Sex", "Ter")
y <- acu.top10[acu.top10$idRota==10,]
ggplot(aes(x=tempo, y=acumulado, color=idRota), data=acu.top10) + geom_line() + ylab("acumulado diario min") + xlab("202020 - 2020202") +
scale_x_continuous(breaks=y$tempo, labels=y$diaSemana)
acu
range(acu$tempo)
ggplot(aes(x=tempo, y=acumulado, color=idRota), data=acu.top10) + geom_line() + ylab("acumulado diario min") + xlab(paste0(range(acu$tempo), " - ") +
)
ggplot(aes(x=tempo, y=acumulado, color=idRota), data=acu.top10) + geom_line() + ylab("acumulado diario min") + xlab(paste0(range(acu$tempo), " - ")) +
scale_x_continuous(breaks=y$tempo, labels=y$diaSemana)
ggplot(aes(x=tempo, y=acumulado, color=idRota), data=acu.top10) + geom_line() + ylab("acumulado diario min") + xlab(paste0(range(acu$tempo) %>% as.character(), " - ")) +
scale_x_continuous(breaks=y$tempo, labels=y$diaSemana)
xAxis <- paste0(range(acu$tempo) %>% as.character(), " - ")
xAxis
xAxis <- paste(range(acu$tempo) %>% as.character(), collapse = " - ")
xAxis
xAxis <- paste(range(acu$tempo) %>% as.character(), collapse = " - ")
ggplot(aes(x=tempo, y=acumulado, color=idRota), data=acu.top10) + geom_line() + ylab("acumulado diario min") + xlab(xAxis) +
scale_x_continuous(breaks=y$tempo, labels=y$diaSemana)
xAxis <- paste(range(acu$tempo) %>% as.character(), collapse = " ~ ")
ggplot(aes(x=tempo, y=acumulado, color=idRota), data=acu.top10) + geom_line() + ylab("acumulado diario min") + xlab(xAxis) +
scale_x_continuous(breaks=y$tempo, labels=y$diaSemana)
ggplot(aes(x=tempo, y=acumulado, color=idRota), data=acu.top10) + geom_line() + ylab("acumulado diario min") + xlab(xAxis) +
scale_x_continuous(breaks=y$tempo, labels=y$diaSemana) + ggtitle("Total Diário")
ggplot(aes(x=tempo, y=acumulado, color=idRota), data=acu.top10) + geom_line() + ylab("acumulado diario min") + xlab(xAxis) +
scale_x_continuous(breaks=y$tempo, labels=y$diaSemana) + ggtitle("Cumulativo Diário")
ggplot(aes(x=tempo, y=acumulado, color=idRota), data=acu.top10) + geom_line() + ylab("acumulado diario min") + xlab(xAxis) +
scale_x_continuous(breaks=y$tempo, labels=y$diaSemana) + ggtitle("Total Diário")
# percorrer os ids das rotas
aux.id <- numeric()
aux.acu <- numeric()
aux.dia <- as.Date(as.character())
aux.diaSemana <- as.character()
i <- 1
aux <- d[d$idRota == i,] # só do id
datas <- unique(aux$dataAsDate)
aux
head(aux)
aux[aux$dataAsDate == x & aux$hora &in& horas, ]
aux[aux$dataAsDate == x & aux$hora %in% horas, ]
horas <- 0:6
aux[aux$dataAsDate == x & aux$hora %in% horas, ]
# percorrer os ids das rotas
aux.id <- numeric()
aux.acu <- numeric()
aux.dia <- as.Date(as.character())
aux.diaSemana <- as.character()
horas <- 0:6
for(i in ids){
aux <- d[d$idRota == i,] # só do id
datas <- unique(aux$dataAsDate)
for(x in datas){
aux.id <- c(aux.id, i)
aux.acu <- c(aux.acu, aux[aux$dataAsDate == x & aux$hora %in% horas,"diffTempo"] %>% sum())
aux.dia <- c(aux.dia, x %>% as.character())
aux.diaSemana <- c(aux.diaSemana, unique(aux[aux$dataAsDate==x,"diaSemana"]) %>% as.character())
}
}
acu <- data.frame(idRota=aux.id, acumulado=aux.acu, tempo=aux.dia, diaSemana=aux.diaSemana)
acu
# identificar os top10
acumulado.geral <- numeric()
acumulado.id <- unique(acu$idRota)
for(i in acumulado.id){
acumulado.geral <- c(acumulado.geral, acu[acu$idRota == i,"acumulado"] %>% sum)
}
acu.geral <- data.frame(idRota=acumulado.id, acumulado.geral)
top10 <- acu.geral[order(acu.geral$acumulado.geral, decreasing = TRUE)[1:10],]
acu.top10 <- acu[acu$idRota %in% top10$idRota,]
acu.top10$tempo <- as.numeric(acu.top10$tempo)
levels(acu.top10$diaSemana) <- c("Dom", "Qua", "Qui", "Sab", "Seg", "Sex", "Ter")
y <- acu.top10[acu.top10$idRota==10,]
xAxis <- paste(range(acu$tempo) %>% as.character(), collapse = " ~ ")
ggplot(aes(x=tempo, y=acumulado, color=idRota), data=acu.top10) + geom_line() + ylab("acumulado diario min") + xlab(xAxis) +
scale_x_continuous(breaks=y$tempo, labels=y$diaSemana) + ggtitle("Total Diário")
library(dplyr)
library(ggplot2)
d <- read.csv("data/datasetCompleto.csv")
rotas.id <- d$idRota %>% unique()
rotas.min <- numeric()
for(i in rotas.id){
rotas.min  <- c(rotas.min, sort(d[d$idRota == i, "tempoSegundos"])[1:5] %>% median())
}
baseline <- data.frame(rotasId=rotas.id, tempo=rotas.min)
d$dataAsDate <- d$dataAsDate %>% as.Date()
d$idRota <- as.factor(d$idRota)
# calculando a differença de tempos
diffAux <- rep(NA, nrow(d))
for(i in rotas.id){
ind.rota <- which(d$idRota == i)
diffAux[ind.rota] <- (d[ind.rota, "tempoSegundos"] - baseline[baseline$rotasId == i, "tempo"]) / 60
}
d$diffTempo <- diffAux
head(d)
d$diaSemana
d$semana <- d$diaSemana
levels(d$semana) <- c("Dom", "Qua", "Qui", "Sab", "Seg", "Sex", "Ter")
head(d)
d[, select(diaSemana, semana)]
select(d,diaSemana, semana)
library(dplyr)
library(ggplot2)
d <- read.csv("data/datasetCompleto.csv")
rotas.id <- d$idRota %>% unique()
rotas.min <- numeric()
for(i in rotas.id){
rotas.min  <- c(rotas.min, sort(d[d$idRota == i, "tempoSegundos"])[1:5] %>% median())
}
baseline <- data.frame(rotasId=rotas.id, tempo=rotas.min)
d$dataAsDate <- d$dataAsDate %>% as.Date()
d$idRota <- as.factor(d$idRota)
# calculando a differença de tempos
diffAux <- rep(NA, nrow(d))
for(i in rotas.id){
ind.rota <- which(d$idRota == i)
diffAux[ind.rota] <- (d[ind.rota, "tempoSegundos"] - baseline[baseline$rotasId == i, "tempo"]) / 60
}
d$diffTempo <- diffAux
levels(d$diaSemana) <- c("Dom", "Qua", "Qui", "Sab", "Seg", "Sex", "Ter")
save(d, baseline, file = "data/dados.RData")
accumulativo <- function(horas=0:23){
# percorrer os ids das rotas
aux.id <- numeric()
aux.acu <- numeric()
aux.dia <- as.Date(as.character())
aux.diaSemana <- as.character()
for(i in ids){
aux <- d[d$idRota == i,] # só do id
datas <- unique(aux$dataAsDate)
for(x in datas){
aux.id <- c(aux.id, i)
aux.acu <- c(aux.acu, aux[aux$dataAsDate == x & aux$hora %in% horas,"diffTempo"] %>% sum())
aux.dia <- c(aux.dia, x %>% as.character())
aux.diaSemana <- c(aux.diaSemana, unique(aux[aux$dataAsDate==x,"diaSemana"]) %>% as.character())
}
}
data.frame(idRota=aux.id, acumulado=aux.acu, tempo=aux.dia, diaSemana=aux.diaSemana)
}
acu.geral <- accumulativo(d)
accumulativo <- function(d, horas=0:23){
# percorrer os ids das rotas
aux.id <- numeric()
aux.acu <- numeric()
aux.dia <- as.Date(as.character())
aux.diaSemana <- as.character()
for(i in ids){
aux <- d[d$idRota == i,] # só do id
datas <- unique(aux$dataAsDate)
for(x in datas){
aux.id <- c(aux.id, i)
aux.acu <- c(aux.acu, aux[aux$dataAsDate == x & aux$hora %in% horas,"diffTempo"] %>% sum())
aux.dia <- c(aux.dia, x %>% as.character())
aux.diaSemana <- c(aux.diaSemana, unique(aux[aux$dataAsDate==x,"diaSemana"]) %>% as.character())
}
}
data.frame(idRota=aux.id, acumulado=aux.acu, tempo=aux.dia, diaSemana=aux.diaSemana)
}
acu.geral <- accumulativo(d)
acu.geral
acu.06 <- accumulativo(d, horas=0:6)
topX <- function(acu, x=10){
acumulado.geral <- numeric()
acumulado.id <- unique(acu$idRota)
for(i in acumulado.id){
acumulado.geral <- c(acumulado.geral, acu[acu$idRota == i,"acumulado"] %>% sum)
}
acu.geral <- data.frame(idRota=acumulado.id, acumulado.geral)
acu.geral[order(acu.geral$acumulado.geral, decreasing = TRUE)[1:x],]
}
topX(acu.06)
data <- acu.06
data
range(data$tempo)
unique(data$tempo)
data[unique(data$tempo), "diaSemana"]
data[data$tempo %in% unique(data$tempo), "diaSemana"]
breakX <- data[unique(data$tempo), "diaSemana"]
breakX
breakX <- unique(data$tempo)
breakX
detect(data$tempo, breakX)
?which
which(data$tempo, breakX)
which(data$tempo == breakX)
breakX <- unique(data$tempo)
breakX
breakX <- unique(data$tempo)
breakX
data$tempo
unique(data$idRota)[1]
xAxis <- paste(range(data$tempo) %>% as.character(), collapse = " ~ ")
ggplot(aes(x=tempo, y=acumulado, color=idRota), data=data) + geom_line() + ylab("acumulado diario min") + xlab(xAxis) +
scale_x_continuous(breaks=y$tempo, labels=y$diaSemana) + ggtitle("Total Diário")
ggplot(aes(x=tempo, y=acumulado, color=idRota), data=data) + geom_line() + ylab("acumulado diario min") + xlab(xAxis)
data<- acu.06[acu.06$idRota %in% top10$idRota,]
xAxis <- paste(range(data$tempo) %>% as.character(), collapse = " ~ ")
ggplot(aes(x=tempo, y=acumulado, color=idRota), data=data) + geom_line() + ylab("acumulado diario min") + xlab(xAxis)
breakX <- unique(data$tempo)
break()
breakX
data[data$tempo==breakX[1], "diaSemana"]
data[data$tempo==breakX[1][1], "diaSemana"]
data[unique(data$tempo==breakX[1]), "diaSemana"]
data[data$tempo==breakX[1][1], "diaSemana"]
data[data$tempo==breakX[1][1], "diaSemana"] %in% unique()
data$tempo==breakX[1]
which(data$tempo==breakX[1])
which(data$tempo==breakX[1])[1]
which(data$tempo==breakX[1])[1]
for(b in breakX){}
labelX <- as.character()
for(b in breakX){
labelX <- c(labelX, data[which(data$tempo==b)[1], "diaSemana"])
}
labelX
data[which(data$tempo==b)[1], "diaSemana"]
b <- breakX[1]
b
data[which(data$tempo==b)[1], "diaSemana"]
data[which(data$tempo==b)[1], "diaSemana"] %>% as.character()
breakX <- unique(data$tempo)
labelX <- as.character()
for(b in breakX){
labelX <- c(labelX, data[which(data$tempo==b)[1], "diaSemana"] %>% as.character())
}
breakX <- unique(data$tempo)
labelX <- NULL
for(b in breakX){
labelX <- c(labelX, data[which(data$tempo==b)[1], "diaSemana"] %>% as.character())
}
for(b in breakX){
print(b)
labelX <- c(labelX, data[which(data$tempo==b)[1], "diaSemana"] %>% as.character())
}
for(b in breakX){
print(which(data$tempo==b)[1])
labelX <- c(labelX, data[which(data$tempo==b)[1], "diaSemana"] %>% as.character())
}
data$tempo==b
b
breaks
breakX
breakX <- unique(data$tempo) %>% as.numeric
labelX <- as.character()
for(b in breakX){
print(which(data$tempo==b)[1])
labelX <- c(labelX, data[which(data$tempo==b)[1], "diaSemana"] %>% as.character())
}
labelX
ggplot(aes(x=tempo, y=acumulado, color=idRota), data=data) + geom_line() + ylab("acumulado diario min") + xlab(xAxis) +
scale_x_continuous(breaks=breakX, labels=labelX) + ggtitle("Total Diário")
data$tempo <- as.numeric(data$tempo)
breakX <- unique(data$tempo) %>% as.numeric
labelX <- as.character()
for(b in breakX){
labelX <- c(labelX, data[which(data$tempo==b)[1], "diaSemana"] %>% as.character())
}
xAxis <- paste(range(data$tempo) %>% as.character(), collapse = " ~ ")
ggplot(aes(x=tempo, y=acumulado, color=idRota), data=data) + geom_line() + ylab("acumulado diario min") + xlab(xAxis) +
scale_x_continuous(breaks=breakX, labels=labelX) + ggtitle("Total Diário")
breakX
top06 <- topX(acu.06)
data <- acu.06[acu.06$idRota %in% top06$idRota,]
data$seq <- as.numeric(data$tempo)
breakX <- unique(data$tempo) %>% as.numeric
labelX <- as.character()
breakX <- unique(data$seq)
labelX <- as.character()
for(b in breakX){
labelX <- c(labelX, data[which(data$tempo==b)[1], "diaSemana"] %>% as.character())
}
xAxis <- paste(range(data$tempo) %>% as.character(), collapse = " ~ ")
ggplot(aes(x=seq, y=acumulado, color=idRota), data=data) + geom_line() + ylab("acumulado diario min") + xlab(xAxis) +
scale_x_continuous(breaks=breakX, labels=labelX) + ggtitle("Total Diário")
plot <- function(data, titulo="Total Diário"){
data$seq <- as.numeric(data$tempo)
breakX <- unique(data$seq)
labelX <- as.character()
for(b in breakX){
labelX <- c(labelX, data[which(data$tempo==b)[1], "diaSemana"] %>% as.character())
}
xAxis <- paste(range(data$tempo) %>% as.character(), collapse = " ~ ")
ggplot(aes(x=seq, y=acumulado, color=idRota), data=data) + geom_line() + ylab("acumulado diario min") + xlab(xAxis) +
scale_x_continuous(breaks=breakX, labels=labelX) + ggtitle(titulo)
}
plot(data, titulo = "Total 0 ~ 6 horas")
plot <- function(data, titulo="Total Diário", filename="total"){
data$seq <- as.numeric(data$tempo)
breakX <- unique(data$seq)
labelX <- as.character()
for(b in breakX){
labelX <- c(labelX, data[which(data$tempo==b)[1], "diaSemana"] %>% as.character())
}
xAxis <- paste(range(data$tempo) %>% as.character(), collapse = " ~ ")
ggplot(aes(x=seq, y=acumulado, color=idRota), data=data) + geom_line() + ylab("acumulado diario min") + xlab(xAxis) +
scale_x_continuous(breaks=breakX, labels=labelX) + ggtitle(titulo)
ggsave(filename = paste0("plot/",filename,".png"))
}
acu.06 <- accumulativo(d, horas=0:6)
top06 <- topX(acu.06)
data <- acu.06[acu.06$idRota %in% top06$idRota,]
plot(data, titulo = "Total 0 ~ 6 horas", filename = "06")
plot(data, titulo = "Total 0 ~ 6 horas", filename = "06")
acu.712 <- accumulativo(d, horas=7:12)
top712 <- topX(acu.712)
data <- acu.06[acu.06$idRota %in% top712$idRota,]
plot(data, titulo = "Total 7 ~ 12 horas", filename = "712")
acu <- accumulativo(d, horas=0:6)
top <- topX(acu)
data <- acu[acu$idRota %in% top$idRota,]
plot(data, titulo = "Total 0 ~ 6 horas", filename = "0_6")
acu <- accumulativo(d, horas=7:12)
top <- topX(acu)
data <- acu[acu$idRota %in% top$idRota,]
plot(data, titulo = "Total 7 ~ 12 horas", filename = "7_12")
acu <- accumulativo(d, horas=13:18)
top <- topX(acu)
data <- acu[acu$idRota %in% top$idRota,]
plot(data, titulo = "Total 13 ~ 18 horas", filename = "13_18")
range(d$hora)
acu <- accumulativo(d, horas=19:23)
top <- topX(acu)
data <- acu[acu$idRota %in% top$idRota,]
plot(data, titulo = "Total 19 ~ 23 horas", filename = "19_23")
acu <- accumulativo(d)
top <- topX(acu)
data <- acu[acu$idRota %in% top$idRota,]
plot(data)
